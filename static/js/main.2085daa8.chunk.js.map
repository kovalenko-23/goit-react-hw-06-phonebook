{"version":3,"sources":["redux/phonebook/phoonebook-actions.jsx","Components/ContactsForm/ContactsForm.styled.jsx","Components/ContactsForm/ContactsForm.jsx","Components/ContactsItem/ContactsItem.styled.jsx","Components/ContactsItem/ContactsItem.jsx","Components/ContactList/ContactList.styled.jsx","redux/phonebook/phonebook-selectors.jsx","Components/ContactList/ContactsList.jsx","Components/ContactsFilter/ContactsFilter.styled.jsx","Components/ContactsFilter/ContactsFilter.jsx","App.js","reportWebVitals.js","redux/phonebook/phonebook-reducer.jsx","redux/store.js","index.js"],"names":["actions","changeFilter","createAction","deleteContact","id","name","payload","onSubmitForm","number","shortid","generate","Form","styled","form","Label","label","props","bottom","Input","input","ButtonAdd","button","ContactsForm","useState","setName","setNumber","dispatch","useDispatch","handleInputChange","event","currentTarget","value","resetSate","onSubmit","preventDefault","phoonebookActions","handleOnSubmitForm","autoComplete","type","onChange","pattern","title","required","Contact","li","ContactItem","p","DeleteContactBtn","ContactsItem","onDeleteButton","onClick","List","ul","getContacts","state","phoneBook","contacts","getFilter","filter","ContactsList","useSelector","visibleContacts","contact","toLowerCase","includes","map","Wrapper","div","Filterlabel","FilterInput","ContactsFilter","e","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","JSON","parse","window","localStorage","getItem","createReducer","toast","error","icon","fill","success","combineReducers","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","PhoneBookReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"6RAmBeA,EAFC,CAAEC,aAdGC,YAAa,0BAcFC,cAbVD,YAAa,4BAA4B,SAACE,EAAIC,GAAL,MAAe,CAC5EC,QAAS,CACPF,KACAC,YAU2CE,aAP1BL,YACnB,gCACA,SAACG,EAAMG,GAAP,MAAmB,CACjBF,QAAS,CAAEF,GAAIK,IAAQC,WAAYL,OAAMG,eCXhCG,EAAOC,IAAOC,KAAV,8HAOJC,EAAQF,IAAOG,MAAV,qIAIC,SAACC,GAAD,OAAYA,EAAMC,OAAS,OAAS,SAG1CC,EAAQN,IAAOO,MAAV,iDAILC,EAAYR,IAAOS,OAAV,qH,OCoDPC,I,gBAAAA,EAnER,WACL,MAAwBC,mBAAS,IAAjC,mBAAOlB,EAAP,KAAamB,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOf,EAAP,KAAeiB,EAAf,KAEMC,EAAWC,cAKXC,EAAoB,SAAAC,GACxB,MAAwBA,EAAMC,cAAtBzB,EAAR,EAAQA,KAAM0B,EAAd,EAAcA,MACd,OAAQ1B,GACN,IAAK,OACHmB,EAAQO,GACR,MACF,IAAK,SACHN,EAAUM,GACV,MACF,QACE,SAUAC,EAAY,WAChBR,EAAQ,IACRC,EAAU,KAGZ,OACE,eAACd,EAAD,CAAMsB,SAZa,SAAAJ,GACnBA,EAAMK,iBAlBmB,SAAC7B,EAAMG,GAChCkB,EAASS,EAAkB5B,aAAaF,EAAMG,IAkB9C4B,CAAmB/B,EAAMG,GACzBwB,KASA,UACE,eAAClB,EAAD,kBAEE,cAACI,EAAD,CACEmB,aAAa,MACbC,KAAK,OACLjC,KAAK,OACL0B,MAAO1B,EACPkC,SAAUX,EACVY,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,eAAC5B,EAAD,CAAOG,QAAM,EAAb,mBAEE,cAACC,EAAD,CACEmB,aAAa,MACbC,KAAK,MACLjC,KAAK,SACL0B,MAAOvB,EACP+B,SAAUX,EACVY,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,cAACtB,EAAD,CAAWkB,KAAK,SAAhB,iCCjEOK,EAAU/B,IAAOgC,GAAV,6LAUPC,EAAcjC,IAAOkC,EAAV,gEAIXC,EAAmBnC,IAAOS,OAAV,sECDd2B,EAZM,SAAC,GAA0C,IAAxC5C,EAAuC,EAAvCA,GAAIC,EAAmC,EAAnCA,KAAMG,EAA6B,EAA7BA,OAAQyC,EAAqB,EAArBA,eACxC,OACE,eAACN,EAAD,CAASvC,GAAIA,EAAb,UACE,eAACyC,EAAD,WAAcxC,EAAd,OACA,cAACwC,EAAD,UAAcrC,IACd,cAACuC,EAAD,CAAkBT,KAAK,SAASY,QAAS,kBAAMD,EAAe7C,EAAIC,IAAlE,wBCNO8C,EAAOvC,IAAOwC,GAAV,gICFJC,EAAc,SAAAC,GAAK,OAAIA,EAAMC,UAAUC,UACvCC,EAAY,SAAAH,GAAK,OAAIA,EAAMC,UAAUG,QCiCnCC,EAzBM,WACnB,IAAMH,EAAWI,YAAYP,GACvBK,EAASE,YAAYH,GACrB/B,EAAWC,cAIXkC,EAAkBL,EAASE,QAAO,SAAAI,GAAO,OAC7CA,EAAQzD,KAAK0D,cAAcC,SAASN,MAEtC,OACE,cAACP,EAAD,UACGU,EAAgBI,KAAI,gBAAG7D,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMG,EAAb,EAAaA,OAAb,OACnB,cAAC,EAAD,CAEEJ,GAAIA,EACJC,KAAMA,EACNG,OAAQA,EACRyC,eAAgB,kBAdF,SAAC7C,EAAIC,GAAL,OACpBqB,EAASS,EAAkBhC,cAAcC,EAAIC,IAajBF,CAAcC,EAAIC,KAJnCD,SCrBF8D,EAAUtD,IAAOuD,IAAV,oDAGPC,EAAcxD,IAAOG,MAAV,gGAKXsD,EAAczD,IAAOO,MAAV,iDCgBTmD,EArBQ,WACrB,IAAMZ,EAASE,YAAYH,GACrB/B,EAAWC,cAEjB,OACE,cAACuC,EAAD,UACE,eAACE,EAAD,kBAEE,cAACC,EAAD,CACE/B,KAAK,OACLjC,KAAK,UACL0B,MAAO2B,EACPnB,SAAU,SAAAgC,GAAC,OACT7C,EAASS,EAAkBlC,aAAasE,EAAEzC,cAAcC,iBCZ9DmC,EAAUtD,IAAOuD,IAAV,wHAoBEK,I,IAAAA,EAbR,WACL,OACE,eAAC,EAAD,WACE,cAAC,IAAD,IACA,2CACA,cAAC,EAAD,IACA,0CACA,cAAC,EAAD,IACA,cAAC,EAAD,QCTSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,+BCDRQ,GAAY,UAAGC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,oBAA1C,QAA0D,GAEtE/B,GAAWgC,YAAcN,IAAD,mBAC3BlF,EAAQO,cAAe,SAAC+C,EAAD,GAAyB,IAAfhD,EAAc,EAAdA,QAChC,GAAIgD,IAAU,IACSA,EAAMW,KAAI,SAAAH,GAAO,OAAIA,EAAQzD,QACjC2D,SAAS1D,EAAQD,MAIhC,OAHAoF,IAAMC,MAAN,2BAAgCpF,EAAQD,KAAxC,sBAAkE,CAChEsF,KAAM,cAAC,KAAD,CAAOC,KAAK,UAEbtC,EAKX,OADAmC,IAAMI,QAAN,UAAiBvF,EAAQD,KAAzB,6BACM,GAAN,mBAAWiD,GAAX,CAAkBhD,OAbQ,cAgB3BN,EAAQG,eAAgB,SAACmD,EAAD,GAAyB,IAAfhD,EAAc,EAAdA,QAEjC,OADAmF,IAAMI,QAAN,UAAiBvF,EAAQD,KAAzB,gCACOiD,EAAMI,QAAO,SAAAI,GAAO,OAAIA,EAAQ1D,KAAOE,EAAQF,SAlB5B,IAsBxBsD,GAAS8B,YAAc,GAAD,eACzBxF,EAAQC,cAAe,SAACqD,EAAD,YAAUhD,YAGrBwF,eAAgB,CAC7BtC,YACAE,Y,gDCrBIqC,GAAgB,CACpBC,IAAK,WACLC,aACAC,UAAW,CAAC,WAGRC,GAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,KAAOC,KAAWC,KAAOC,KAASC,KAAOC,UAHhD,CAMdC,OAGWC,GAAQC,YAAe,CAClCC,QAAS,CACPzD,UAAW0D,aAAelB,GAAemB,KAE3Cf,cACAgB,UAAUC,IAGCC,GAAYC,aAAaR,I,SC7BtCS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUX,MAAOA,GAAjB,SACE,cAAC,eAAD,CAAaY,QAAS,KAAML,UAAWA,GAAvC,SACE,cAAC,EAAD,UAINM,SAASC,eAAe,SAM1BnD,M","file":"static/js/main.2085daa8.chunk.js","sourcesContent":["import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst changeFilter = createAction('phonebook/handleFinder');\r\nconst deleteContact = createAction('phonebook/deletetContact', (id, name) => ({\r\n  payload: {\r\n    id,\r\n    name,\r\n  },\r\n}));\r\nconst onSubmitForm = createAction(\r\n  'phonebook/handleOnSubmitForm',\r\n  (name, number) => ({\r\n    payload: { id: shortid.generate(), name, number },\r\n  }),\r\n);\r\n\r\nconst actions = { changeFilter, deleteContact, onSubmitForm };\r\n\r\nexport default actions;\r\n","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  display: inline-flex;\n  flex-direction: column;\n  padding: 20px;\n  border: 1px solid black;\n`;\n\nexport const Label = styled.label`\n  display: inline-flex;\n  justify-content: space-between;\n  font-weight: bold;\n  margin-bottom: ${(props) => (props.bottom ? \"20px\" : \"8px\")};\n`;\n\nexport const Input = styled.input`\n  margin-left: 6px;\n`;\n\nexport const ButtonAdd = styled.button`\n  height: 30px;\n  font-weight: bold;\n  font-size: 16px;\n  background-color: #c1f3d9;\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport phoonebookActions from '../../redux/phonebook/phoonebook-actions';\nimport { Form, Label, Input, ButtonAdd } from './ContactsForm.styled';\n\nexport function ContactsForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleOnSubmitForm = (name, number) =>\n    dispatch(phoonebookActions.onSubmitForm(name, number));\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    handleOnSubmitForm(name, number);\n    resetSate();\n  };\n\n  const resetSate = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          autoComplete=\"off\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </Label>\n      <Label bottom>\n        Number\n        <Input\n          autoComplete=\"off\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </Label>\n      <ButtonAdd type=\"submit\">Add to contacts</ButtonAdd>\n    </Form>\n  );\n}\n\nexport default ContactsForm;\n","import styled from \"@emotion/styled\";\n\nexport const Contact = styled.li`\n  display: inline-flex;\n  justify-content: space-between;\n  width: 300px;\n  margin-bottom: 20px;\n  padding: 10px;\n  font-size: 15px;\n  border: 1px solid;\n`;\n\nexport const ContactItem = styled.p`\n  margin: 0;\n  margin-right: 6px;\n`;\nexport const DeleteContactBtn = styled.button`\n  font-size: 12px;\n  font-weight: bold;\n`;\n","import { Contact, ContactItem, DeleteContactBtn } from './ContactsItem.styled';\nimport PropTypes from 'prop-types';\n\nconst ContactsItem = ({ id, name, number, onDeleteButton }) => {\n  return (\n    <Contact id={id}>\n      <ContactItem>{name}:</ContactItem>\n      <ContactItem>{number}</ContactItem>\n      <DeleteContactBtn type=\"button\" onClick={() => onDeleteButton(id, name)}>\n        Delete\n      </DeleteContactBtn>\n    </Contact>\n  );\n};\n\nexport default ContactsItem;\n\nContactsItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onDeleteButton: PropTypes.func,\n};\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n`;\n","export const getContacts = state => state.phoneBook.contacts;\r\nexport const getFilter = state => state.phoneBook.filter;\r\n","import { useSelector, useDispatch } from 'react-redux';\nimport ContactsItem from '../ContactsItem/ContactsItem';\nimport { List } from './ContactList.styled';\nimport phoonebookActions from '../../redux/phonebook/phoonebook-actions';\nimport {\n  getContacts,\n  getFilter,\n} from '../../redux/phonebook/phonebook-selectors';\n\nconst ContactsList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const deleteContact = (id, name) =>\n    dispatch(phoonebookActions.deleteContact(id, name));\n\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter),\n  );\n  return (\n    <List>\n      {visibleContacts.map(({ id, name, number }) => (\n        <ContactsItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          onDeleteButton={() => deleteContact(id, name)}\n        />\n      ))}\n    </List>\n  );\n};\n\nexport default ContactsList;\n","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  margin-bottom: 30px;\n`;\nexport const Filterlabel = styled.label`\n  padding: 15px;\n  border: 1px solid black;\n  font-weight: bold;\n`;\nexport const FilterInput = styled.input`\n  margin-left: 8px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Wrapper, Filterlabel, FilterInput } from './ContactsFilter.styled';\nimport phoonebookActions from '../../redux/phonebook/phoonebook-actions';\nimport { getFilter } from '../../redux/phonebook/phonebook-selectors';\n\nconst ContactsFilter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <Wrapper>\n      <Filterlabel>\n        Find\n        <FilterInput\n          type=\"text\"\n          name=\"message\"\n          value={filter}\n          onChange={e =>\n            dispatch(phoonebookActions.changeFilter(e.currentTarget.value))\n          }\n        />\n      </Filterlabel>\n    </Wrapper>\n  );\n};\n\nexport default ContactsFilter;\n","import { Toaster } from 'react-hot-toast';\nimport styled from '@emotion/styled';\nimport ContactsForm from './Components/ContactsForm/ContactsForm';\nimport ContactsList from './Components/ContactList/ContactsList';\nimport ContactsFilter from './Components/ContactsFilter/ContactsFilter';\n\nconst Wrapper = styled.div`\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport function App() {\n  return (\n    <Wrapper>\n      <Toaster />\n      <h1>Phonebook</h1>\n      <ContactsForm />\n      <h2>Contacts</h2>\n      <ContactsFilter />\n      <ContactsList />\n    </Wrapper>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './phoonebook-actions';\r\nimport { FaBan } from 'react-icons/fa';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst initialState = JSON.parse(window.localStorage.getItem('contacts')) ?? [];\r\n\r\nconst contacts = createReducer(initialState, {\r\n  [actions.onSubmitForm]: (state, { payload }) => {\r\n    if (state !== []) {\r\n      const contactsName = state.map(contact => contact.name);\r\n      if (contactsName.includes(payload.name)) {\r\n        toast.error(`You already have ${payload.name} in your contacts!`, {\r\n          icon: <FaBan fill=\"red\" />,\r\n        });\r\n        return state;\r\n      }\r\n    }\r\n\r\n    toast.success(`${payload.name} added to your contacts!`);\r\n    return [...state, payload];\r\n  },\r\n\r\n  [actions.deleteContact]: (state, { payload }) => {\r\n    toast.success(`${payload.name} removed from your contacts`);\r\n    return state.filter(contact => contact.id !== payload.id);\r\n  },\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (state, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport PhoneBookReducer from './phonebook/phonebook-reducer';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    phoneBook: persistReducer(persistConfig, PhoneBookReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}