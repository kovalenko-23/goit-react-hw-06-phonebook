{"version":3,"sources":["redux/phonebook/phonebook-types.js","redux/phonebook/phoonebook-actions.jsx","Components/ContactsForm/ContactsForm.styled.jsx","Components/ContactsForm/ContactsForm.jsx","Components/ContactsItem/ContactsItem.styled.jsx","Components/ContactsItem/ContactsItem.jsx","Components/ContactList/ContactList.styled.jsx","Components/ContactList/ContactsList.jsx","Components/ContactsFilter/ContactsFilter.styled.jsx","Components/ContactsFilter/ContactsFilter.jsx","App.js","reportWebVitals.js","redux/phonebook/phonebook-reducer.jsx","redux/store.js","index.js"],"names":["name","number","type","types","payload","id","shortid","generate","event","Form","styled","form","Label","label","props","bottom","Input","input","ButtonAdd","button","ContactsForm","onSubmit","useState","setName","setNumber","handleInputChange","currentTarget","value","resetSate","preventDefault","autoComplete","onChange","pattern","title","required","Contact","li","ContactItem","p","DeleteContactBtn","ContactsItem","onDeleteButton","onClick","List","ul","ContactsList","contacts","map","Wrapper","div","Filterlabel","FilterInput","ContactsFilter","connect","state","phoneBook","filter","dispatch","handleOnSubmitForm","phoonebookActions","hendleFinder","e","deleteContact","getVisibleContacts","contact","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","JSON","parse","window","localStorage","getItem","combineReducers","contactsName","toast","error","icon","fill","success","setItem","stringify","rootReducer","PhoneBookReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ec5d6a5.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\nexport default {\r\n  ON_SUBMIT_FORM: 'phonebook/handleOnSubmitForm',\r\n  HANDLE_FINDER: 'phonebook/handleFinder',\r\n  DELETE: 'phonebook/deletetContact',\r\n  GET_VISIBLE_CONTACTS: 'phonebook/getVisibleContacts',\r\n};\r\n","import shortid from 'shortid';\r\nimport types from './phonebook-types';\r\n\r\nconst onSubmitForm = (name, number) => ({\r\n  type: types.ON_SUBMIT_FORM,\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n});\r\n\r\nconst deleteContact = (id, name) => ({\r\n  type: types.DELETE,\r\n  payload: { id, name },\r\n});\r\n\r\nconst changeFilter = event => ({\r\n  type: types.HANDLE_FINDER,\r\n  payload: event,\r\n});\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { onSubmitForm, deleteContact, changeFilter };\r\n","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  display: inline-flex;\n  flex-direction: column;\n  padding: 20px;\n  border: 1px solid black;\n`;\n\nexport const Label = styled.label`\n  display: inline-flex;\n  justify-content: space-between;\n  font-weight: bold;\n  margin-bottom: ${(props) => (props.bottom ? \"20px\" : \"8px\")};\n`;\n\nexport const Input = styled.input`\n  margin-left: 6px;\n`;\n\nexport const ButtonAdd = styled.button`\n  height: 30px;\n  font-weight: bold;\n  font-size: 16px;\n  background-color: #c1f3d9;\n`;\n","import { useState } from 'react';\nimport { Form, Label, Input, ButtonAdd } from './ContactsForm.styled';\nimport PropTypes from 'prop-types';\n\nexport function ContactsForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(name, number);\n    resetSate();\n  };\n\n  const resetSate = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          autoComplete=\"off\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </Label>\n      <Label bottom>\n        Number\n        <Input\n          autoComplete=\"off\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </Label>\n      <ButtonAdd type=\"submit\">Add to contacts</ButtonAdd>\n    </Form>\n  );\n}\n\nexport default ContactsForm;\n\nContactsForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Contact = styled.li`\n  display: inline-flex;\n  justify-content: space-between;\n  width: 300px;\n  margin-bottom: 20px;\n  padding: 10px;\n  font-size: 15px;\n  border: 1px solid;\n`;\n\nexport const ContactItem = styled.p`\n  margin: 0;\n  margin-right: 6px;\n`;\nexport const DeleteContactBtn = styled.button`\n  font-size: 12px;\n  font-weight: bold;\n`;\n","import { Contact, ContactItem, DeleteContactBtn } from './ContactsItem.styled';\nimport PropTypes from 'prop-types';\n\nconst ContactsItem = ({ id, name, number, onDeleteButton }) => {\n  return (\n    <Contact id={id}>\n      <ContactItem>{name}:</ContactItem>\n      <ContactItem>{number}</ContactItem>\n      <DeleteContactBtn type=\"button\" onClick={() => onDeleteButton(id, name)}>\n        Delete\n      </DeleteContactBtn>\n    </Contact>\n  );\n};\n\nexport default ContactsItem;\n\nContactsItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onDeleteButton: PropTypes.func,\n};\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n`;\n","import ContactsItem from '../ContactsItem/ContactsItem';\nimport { List } from './ContactList.styled';\nimport PropTypes from 'prop-types';\n\nconst ContactsList = ({ contacts, onDeleteButton }) => {\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => (\n        <ContactsItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          onDeleteButton={onDeleteButton}\n        />\n      ))}\n    </List>\n  );\n};\n\nexport default ContactsList;\n\nContactsList.propTypes = {\n  onDeleteButtonacts: PropTypes.func,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ).isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  margin-bottom: 30px;\n`;\nexport const Filterlabel = styled.label`\n  padding: 15px;\n  border: 1px solid black;\n  font-weight: bold;\n`;\nexport const FilterInput = styled.input`\n  margin-left: 8px;\n`;\n","import { Wrapper, Filterlabel, FilterInput } from './ContactsFilter.styled';\nimport PropTypes from 'prop-types';\n\nexport const ContactsFilter = ({ value, onChange }) => {\n  return (\n    <Wrapper>\n      <Filterlabel>\n        Find\n        <FilterInput\n          type=\"text\"\n          name=\"message\"\n          value={value}\n          onChange={onChange}\n        />\n      </Filterlabel>\n    </Wrapper>\n  );\n};\n\nContactsFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import { connect } from 'react-redux';\nimport phoonebookActions from './redux/phonebook/phoonebook-actions';\nimport { Toaster } from 'react-hot-toast';\nimport styled from '@emotion/styled';\nimport ContactsForm from './Components/ContactsForm/ContactsForm';\nimport ContactsList from './Components/ContactList/ContactsList';\nimport { ContactsFilter } from './Components/ContactsFilter/ContactsFilter';\n\nconst Wrapper = styled.div`\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport function App({\n  contacts,\n  filter,\n  handleOnSubmitForm,\n  hendleFinder,\n  deleteContact,\n}) {\n  const getVisibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter),\n  );\n\n  return (\n    <Wrapper>\n      <Toaster />\n      <h1>Phonebook</h1>\n      <ContactsForm onSubmit={handleOnSubmitForm} />\n      <h2>Contacts</h2>\n      <ContactsFilter value={filter} onChange={hendleFinder} />\n      <ContactsList\n        contacts={getVisibleContacts}\n        onDeleteButton={deleteContact}\n      />\n    </Wrapper>\n  );\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.phoneBook.contacts,\n  filter: state.phoneBook.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handleOnSubmitForm: (name, number) =>\n    dispatch(phoonebookActions.onSubmitForm(name, number)),\n  hendleFinder: e =>\n    dispatch(phoonebookActions.changeFilter(e.currentTarget.value)),\n  deleteContact: (id, name) =>\n    dispatch(phoonebookActions.deleteContact(id, name)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport types from './phonebook-types';\r\nimport { FaBan } from 'react-icons/fa';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst initialState = JSON.parse(window.localStorage.getItem('contacts')) ?? [];\r\n\r\nconst contacts = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case types.ON_SUBMIT_FORM:\r\n      if (state !== []) {\r\n        const contactsName = state.map(contact => contact.name);\r\n        if (contactsName.includes(payload.name)) {\r\n          toast.error(`You already have ${payload.name} in your contacts!`, {\r\n            icon: <FaBan fill=\"red\" />,\r\n          });\r\n          return state;\r\n        }\r\n      }\r\n\r\n      toast.success(`${payload.name} added to your contacts!`);\r\n      window.localStorage.setItem(\r\n        'contacts',\r\n        JSON.stringify([...state, payload]),\r\n      );\r\n      return [...state, payload];\r\n\r\n    case types.DELETE:\r\n      window.localStorage.setItem(\r\n        'contacts',\r\n        JSON.stringify(state.filter(contact => contact.id !== payload.id)),\r\n      );\r\n\r\n      toast.success(`${payload.name} removed from your contacts`);\r\n      return state.filter(contact => contact.id !== payload.id);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case types.HANDLE_FINDER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n","import { createStore, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport PhoneBookReducer from './phonebook/phonebook-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  phoneBook: PhoneBookReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}